/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
//unixtoime
 */
package gymbookings7095;

import java.awt.Color;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aaronmontgomery
 */
public class ChangeMemberForm extends javax.swing.JFrame {

    /**
     * Creates new form ChangeMemberForm
     */
    String username;

    public ChangeMemberForm() {
        initComponents();
        membersFill();
    }

    public void getUsername(String username) { //method to get stff username from log in form
        this.username = username;
    }

    public boolean intInString(String mem) {
        System.out.println("in method");
        //initailses variables
        boolean check1 = true;
        char[] ch = mem.toCharArray(); //converts Strings to characheter array
        for (int i = 0; i < ch.length; i++) {
            check1 = Character.isLetter(ch[i]); //checks if there is a number in array

            System.out.println(ch[i] + "this is i");
            System.out.println("in first for");
            System.out.println("check1 resultttt" + check1);
        }

        return check1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCB = new javax.swing.JPanel();
        btnContinue = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cbxMem = new javax.swing.JComboBox<>();
        btnFillTable = new javax.swing.JButton();
        btnClearTable = new javax.swing.JButton();
        txtMemUser = new javax.swing.JTextField();
        txtENumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        updateDB = new javax.swing.JButton();
        lblMemberID = new javax.swing.JLabel();
        Jdate = new com.toedter.calendar.JDateChooser();
        togColour = new javax.swing.JToggleButton();
        lblTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelCB.setBackground(new java.awt.Color(255, 255, 51));

        btnContinue.setText("Continue");
        btnContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinueActionPerformed(evt);
            }
        });

        btnUpdate.setText("Change");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member ID", "Member E Number", "Member Username", "Member DOB"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnFillTable.setText("Fill table");
        btnFillTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFillTableActionPerformed(evt);
            }
        });

        btnClearTable.setText("Clear table");
        btnClearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTableActionPerformed(evt);
            }
        });

        txtMemUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMemUserActionPerformed(evt);
            }
        });

        txtENumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtENumberActionPerformed(evt);
            }
        });

        jLabel1.setText("Change here");

        updateDB.setText("Update database");
        updateDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDBActionPerformed(evt);
            }
        });

        Jdate.setDateFormatString("yyyy-MM-dd");
        Jdate.setMinSelectableDate(new java.util.Date(-946767513000L));

        togColour.setText("Change colour");
        togColour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                togColourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCBLayout = new javax.swing.GroupLayout(jPanelCB);
        jPanelCB.setLayout(jPanelCBLayout);
        jPanelCBLayout.setHorizontalGroup(
            jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCBLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCBLayout.createSequentialGroup()
                        .addGroup(jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(txtMemUser)
                            .addComponent(txtENumber, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMemberID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCBLayout.createSequentialGroup()
                                    .addGap(52, 52, 52)
                                    .addComponent(btnClearTable))
                                .addGroup(jPanelCBLayout.createSequentialGroup()
                                    .addComponent(btnUpdate)
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbxMem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnFillTable, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCBLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(updateDB)
                                        .addComponent(btnContinue))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCBLayout.createSequentialGroup()
                                        .addComponent(togColour)
                                        .addContainerGap())))))
                    .addComponent(Jdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanelCBLayout.setVerticalGroup(
            jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCBLayout.createSequentialGroup()
                .addGroup(jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCBLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCBLayout.createSequentialGroup()
                        .addGroup(jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCBLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(lblMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMemUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelCBLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(togColour)
                                .addGroup(jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelCBLayout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addComponent(btnUpdate))
                                    .addGroup(jPanelCBLayout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(cbxMem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnFillTable)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanelCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(btnClearTable)
                                            .addComponent(txtENumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(18, 18, 18)
                        .addComponent(Jdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(updateDB)
                        .addGap(18, 18, 18)
                        .addComponent(btnContinue)))
                .addGap(31, 31, 31))
        );

        lblTitle.setText("Update members table");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(605, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(17, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(365, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(40, Short.MAX_VALUE)
                    .addComponent(jPanelCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void membersFill() {//works

        List<Member> allMembers = MemberDAL.getAllMember();

        for (int i = 0; i < allMembers.size(); i++) {
            cbxMem.addItem(allMembers.get(i).getShortString());
        }
    }
    private void btnContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinueActionPerformed
        BookingMenuForm logB = new BookingMenuForm();
        logB.getUsername(username);
        logB.setSize(800, 600);

        logB.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        logB.setVisible(true);
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_btnContinueActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        /*
        //date,time,mem,staff
        Date updatedDate = jdateBooking.getDate();
        DateFormat dFormat = new SimpleDateFormat("yyyy-mm-dd");
        String date = dFormat.format(updatedDate);

        String updatedTime=cbxtime.getSelectedItem().toString();

        String updateMem=txtMemUser.getText();
        String updateStaff=txtStaffUser.getText();

        Booking newBooking= new Booking(updatedTime,updateMem,updateStaff,date);

        BookingDAL.updateBooking(newBooking);

         */
        //get table model
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        if (jTable1.getSelectedRowCount() == 1) {
            //if single row is selected then update

            String memID = lblMemberID.getText();
            String mem = txtMemUser.getText();
            if (mem.isEmpty()) {
                JOptionPane.showMessageDialog(this, "One of the text fields are empty");
            } else {
                mem = mem.substring(0, 2).toUpperCase() + mem.substring(2);//makes sure first two charcters are capitals
                boolean intCheck = intInString(mem); //validates username to check for no numbers
                if (intCheck == false) {
                    JOptionPane.showMessageDialog(this, "Username can not have numeber in it");
                } else {

                    String num = txtENumber.getText();
                    if (num.isEmpty()) {
                        JOptionPane.showMessageDialog(this, "One of the fields are empty");
                    } else {
                        boolean intChecknum = intInString(num);
                        char fChar = num.charAt(0);
                        char sChar = num.charAt(1); //gets the first two caharcters of phone number
                        char zero = '0';
                        char sev = '7'; //intialsing chars
                        boolean charz = fChar == (zero);
                        boolean charo = sChar == (sev);

                        if (intChecknum == true) { //xhecking for letter
                            JOptionPane.showMessageDialog(this, "Can not have letters in phone number");
                        } else if (charz == false || charo == false) { //checking first two numbers
                            JOptionPane.showMessageDialog(this, "needs to start with 07");
                        } else if (num.length() != 11) {//checkinh length
                            JOptionPane.showMessageDialog(this, "Phone number doesnt meet length requirments");
                        } else {

                            Date chosenDate = Jdate.getDate();
                            DateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
                            if (chosenDate == null) {
                                JOptionPane.showMessageDialog(this, "Need to choose a date");
                            } else {
                                //need to make sure 18
                                String date = dFormat.format(chosenDate);
                                if (date.isEmpty()) {
                                    JOptionPane.showMessageDialog(this, "One of the text fields are empty");
                                } else {

                                    //set updated value on table row
                                    tblModel.setValueAt(memID, jTable1.getSelectedRow(), 0);
                                    tblModel.setValueAt(num, jTable1.getSelectedRow(), 1);
                                    tblModel.setValueAt(mem, jTable1.getSelectedRow(), 2);
                                    tblModel.setValueAt(date, jTable1.getSelectedRow(), 3);
                                    //update message display
                                    JOptionPane.showMessageDialog(this, "upadte dub ");
                                }
                            }
                        }
                    }
                }
            }
        } else {
            if (jTable1.getRowCount() == 0) {
                //if table empty
                JOptionPane.showMessageDialog(this, "table empty ");
            } else {
                //if row is not selected or multiple rows selected
                JOptionPane.showMessageDialog(this, "Please select a row for updating ");
            }
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            //set data to their textfield
            DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();

            //set data to text field when row is selected
            String memberID = tblModel.getValueAt(jTable1.getSelectedRow(), 0).toString();
            String user = tblModel.getValueAt(jTable1.getSelectedRow(), 1).toString();
            String num = tblModel.getValueAt(jTable1.getSelectedRow(), 2).toString();
            Date dob = new SimpleDateFormat("yyyy-MM-dd").parse((String) tblModel.getValueAt(jTable1.getSelectedRow(), 3));
            System.out.println(dob + "this is dob");
            Jdate.setDate(dob);

            //set to textfield
            lblMemberID.setText(memberID);
            txtMemUser.setText(user);
            txtENumber.setText(num);
        } catch (ParseException ex) {
            System.out.println(ex);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void btnFillTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFillTableActionPerformed
        String chosenMember = cbxMem.getSelectedItem().toString();
        //get m from from of memuser and id before
        String[] split = chosenMember.split(" ");
        String memID = split[0];
        int mID = Integer.parseInt(split[0]);
        String memUser = split[1];
        Member m = new Member(mID, memUser, "", "");

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int x = 0; x < jTable1.getRowCount(); x++) {
            model.removeRow(x);
        }
        Member[] a = MemberDAL.getMemberbyID(m);

        System.out.println(a.length);
        if (a.length == 0) {
            System.out.println("member no");
        }
        for (int i = 0; i < a.length; i++) {
            model.addRow(new Object[]{a[i].getMemberID(), a[i].getmemberUsername(), a[i].getmemberENumber(), a[i].getmemberDOB()});
        }
    }//GEN-LAST:event_btnFillTableActionPerformed

    private void btnClearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTableActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int x = 0; x < jTable1.getRowCount(); x++) {
            model.removeRow(x);
        }
    }//GEN-LAST:event_btnClearTableActionPerformed

    private void txtMemUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMemUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMemUserActionPerformed

    private void txtENumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtENumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtENumberActionPerformed

    private void updateDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDBActionPerformed
        try {
            //get selected row and its properties and use insert method.
            DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();

            //set data to text field when row is selected
            String memberID = tblModel.getValueAt(jTable1.getSelectedRow(), 0).toString();
            String user = tblModel.getValueAt(jTable1.getSelectedRow(), 1).toString();
            String num = tblModel.getValueAt(jTable1.getSelectedRow(), 2).toString();
            // String date=tblModel.getValueAt(jTable1.getSelectedRow(),3).toString();
            Date dob = new SimpleDateFormat("yyyy-MM-dd").parse((String) tblModel.getValueAt(jTable1.getSelectedRow(), 3));
            System.out.println(dob + "this is dob");
            Jdate.setDate(dob);
            /*
           try{
               System.out.println("in trt");
               int index=jTable1.getSelectedRow();
               Date Dob=new SimpleDateFormat("yyyy-MM-dd").parse((String)tblModel.getValueAt(index,3));
               Jdate.setDate(Dob);
           }catch(ParseException e){
               System.out.println(e);
           }
             */
            //set to textfield

            String mID = lblMemberID.getText();
            int updMemberID = Integer.parseInt(mID);
            String upduser = txtMemUser.getText();
            String updnum = txtENumber.getText();
            Date chosenDate = Jdate.getDate();
            DateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
            //need to make sure 18
            String upddate = dFormat.format(chosenDate);
            System.out.println(upddate + "thisni sthe date");
            //need to make sure 18

            Member updateM = new Member(updMemberID, upduser, updnum, upddate);

            MemberDAL.updateMember(updateM);
            JOptionPane.showMessageDialog(this, "Table updated");
        } catch (ParseException ex) {
            System.out.println(ex);;
        }
    }//GEN-LAST:event_updateDBActionPerformed

    private void togColourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_togColourActionPerformed
        Color original = new Color(255, 255, 51);
        if (togColour.isSelected()) {
            //  jPanel1.setBackground(Color.white); cant see buttons
            jPanelCB.setBackground(Color.yellow);
            add(jPanelCB);
        } else {
            jPanelCB.setBackground(original);
            add(jPanelCB);
        }
    }//GEN-LAST:event_togColourActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangeMemberForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangeMemberForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangeMemberForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangeMemberForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangeMemberForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Jdate;
    private javax.swing.JButton btnClearTable;
    private javax.swing.JButton btnContinue;
    private javax.swing.JButton btnFillTable;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbxMem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanelCB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblMemberID;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JToggleButton togColour;
    private javax.swing.JTextField txtENumber;
    private javax.swing.JTextField txtMemUser;
    private javax.swing.JButton updateDB;
    // End of variables declaration//GEN-END:variables
}
