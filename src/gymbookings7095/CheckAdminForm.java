/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//fill box with staff username and id and then check their password with that username and then check with id if admin
package gymbookings7095;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author aaronmontgomery
 */
public class CheckAdminForm extends javax.swing.JFrame {

    boolean found = false;
    boolean adminb = false;
    boolean notFound;
    /**
     * Creates new form CheckAdminForm
     */
    String username;

    public CheckAdminForm() {
        initComponents();
        fillStaff();
    }

    public void getUsername(String username) { //method to get stff username from log in form
        this.username = username;
    }

    private void fillStaff() {//This fills the combo box with member IDs and usernames

        List<Staff> allStaff = StaffDAL.getAllStaff();

        for (int i = 0; i < allStaff.size(); i++) {
            cbxStaff.addItem(allStaff.get(i).getstaffcbx());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbxStaff = new javax.swing.JComboBox<>();
        pwdPassword = new javax.swing.JPasswordField();
        lblcbxstaff = new javax.swing.JLabel();
        lblpassword = new javax.swing.JLabel();
        btnAdminlevel = new javax.swing.JButton();
        togColour = new javax.swing.JToggleButton();
        lblTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        lblcbxstaff.setText("Choose your username/ID");

        lblpassword.setText("Enter password");

        btnAdminlevel.setText("Check admin level");
        btnAdminlevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminlevelActionPerformed(evt);
            }
        });

        togColour.setText("Change colour");
        togColour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                togColourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblcbxstaff)
                            .addComponent(lblpassword))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pwdPassword)
                            .addComponent(cbxStaff, 0, 120, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(btnAdminlevel)))
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(togColour))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(togColour)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblcbxstaff))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pwdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblpassword))
                .addGap(44, 44, 44)
                .addComponent(btnAdminlevel)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        lblTitle.setText("Check admin level");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdminlevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminlevelActionPerformed
        if (pwdPassword.getPassword().length <= 0) { //checks if the password text field is empty
            JOptionPane.showMessageDialog(this, "password empty");
        } else {
            String chosenStaff = cbxStaff.getSelectedItem().toString();//gets selectedstaff
            String[] split = chosenStaff.split(" "); //Splits the two variables
            String staffID = split[1];
            int sID = Integer.parseInt(split[1]);
            String staffUser = split[0];
            Staff m = new Staff(sID, staffUser, "", "", ""); //staff object that is inserted into password and isername method

            char[] chosenPassword = pwdPassword.getPassword();//to make to string loop through cincantinatation.
            String pass = "";//pass is where the inserted password is stored
            for (int i = 0; i < chosenPassword.length; i++) {
                pass = pass + chosenPassword[i];
            }

            ArrayList<Staff> x = new ArrayList<Staff>(); //This loops through the arrray list made in the getPasswordUsername method
            x = StaffDAL.getPasswordUsername();//need to be able to get admin level
            if (x.isEmpty()) { //used to check if the database is empty
                JOptionPane.showMessageDialog(this, "No users in staff table");
            } else {

                for (int i = 0; i < x.size(); i++) {
                    if (x.get(i).getstaffUsername().equals(staffUser)) {
                        if (x.get(i).getstaffPassword().equals(pass)) {
                            System.out.println("YES");//successful login
                            JOptionPane.showMessageDialog(this, "password correct");
                            //x.getstaffAdminLevel();
                            found = true; //passwords match
                            break;// fixed by adding breaking taking out bootm of code
                        } else {
                            JOptionPane.showMessageDialog(this, "password incorrect");
                            found = false;//username and password doesnt match
                        }
                    }
                }
                if (found == true) { //the passwords and username match
                    JOptionPane.showMessageDialog(this, "checking admin level");

                    ArrayList<Staff> a = new ArrayList<Staff>(); //array this which get the ID that was chosen earlier and check taht it is an admin
                    a = StaffDAL.getStaffbyID(m);
                    for (int i = 0; i < a.size(); i++) {
                        if (a.get(i).getstaffAdminLevel().equals("admin")) {
                            JOptionPane.showMessageDialog(this, "is an admin");

                            AdminForm logB = new AdminForm();//opens admin menu
                            logB.getUsername(username);

                            logB.setSize(800, 600);

                            logB.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

                            logB.setVisible(true);
                            this.setVisible(false);//sets current form to false so only the new booking one appears

                        } else {
                            JOptionPane.showMessageDialog(this, "Not an admin going back to main menu........");
                            BookingMenuForm logB = new BookingMenuForm();//brings user back to main menu
                            logB.getUsername(username);

                            logB.setSize(800, 600);

                            logB.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

                            logB.setVisible(true);
                            this.setVisible(false);//sets current form to false so only the new booking one appears
                            return;
                        }
                    }
                    /*    
            String ad=a.get(i).checkAdmin();
                System.out.println("in for  lop");
                if(ad=="Admin"){
                    adminb=true;
                     */

                }
                /*else {//only checks the first staff member knhfcuiwahbeuchb
           ArrayList<Staff> y = new ArrayList<Staff>(); //This loops through the arrray list made in the getPasswordUsername method
           y = StaffDAL.getPasswordUsername(); //go through each for just pass and username and then when l = y.size go to password and username incorrect
           
            for (int l = 0; l < y.size(); l++) {//loops through each username and password and checks why the login failed.
                System.out.println(y.get(l));
                 if (y.get(l).getstaffUsername().equals(staffUser) && (!y.get(l).getstaffPassword().equals(pass))) {
                    System.out.println("Password not found");
                   JOptionPane.showMessageDialog(this, "Password incorrect");
                   notFound=false;
                   break;
                } else if (!y.get(l).getstaffUsername().equals(staffUser) && y.get(l).getstaffPassword().equals(pass)) {
                    System.out.println("username not found");
                   JOptionPane.showMessageDialog(this, "Username incorrect");
                 notFound=false;
                   break;
                }
            }
                for (int l = 0; l < y.size(); l++) {//loops through each username and password and checks why the login failed.
               if(notFound==true){
                    if (!y.get(l).getstaffPassword().equals(pass) && !y.get(l).getstaffUsername().equals(staffUser)) {
                    System.out.println("Password and Username not found");
                  JOptionPane.showMessageDialog(this, "Password and Username incorrect");
                    break;
                }
            }
                
                
            }
   
          
        }
                 */
            }
        }

    }//GEN-LAST:event_btnAdminlevelActionPerformed

    private void togColourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_togColourActionPerformed
        Color original = new Color(255, 153, 153);
        if (togColour.isSelected()) {
            //  jPanel1.setBackground(Color.white); cant see buttons
            jPanel1.setBackground(Color.yellow);
            add(jPanel1);
        } else {
            jPanel1.setBackground(original);
            add(jPanel1);
        }
    }//GEN-LAST:event_togColourActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckAdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckAdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckAdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckAdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckAdminForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdminlevel;
    private javax.swing.JComboBox<String> cbxStaff;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblcbxstaff;
    private javax.swing.JLabel lblpassword;
    private javax.swing.JPasswordField pwdPassword;
    private javax.swing.JToggleButton togColour;
    // End of variables declaration//GEN-END:variables
}
